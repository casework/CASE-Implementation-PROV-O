# This software was developed at the National Institute of Standards
# and Technology by employees of the Federal Government in the course
# of their official duties. Pursuant to title 17 Section 105 of the
# United States Code this software is not subject to copyright
# protection and is in the public domain. NIST assumes no
# responsibility whatsoever for its use by other parties, and makes
# no guarantees, expressed or implied, about its quality,
# reliability, or any other characteristic.
#
# We would appreciate acknowledgement if the software is used.

CONSTRUCT
{
  # Identify all actions chained together by passing some intermediary
  # result, A -> result -> B.
  #
  # The latest provenance record for an object is used.  Hence, the
  # generating action needs to be considered in the construction as
  # well.
  ?nUsingAction prov:wasInformedBy ?nMostRecentAction .
}
WHERE {
  # ?nResult can only be generated by one action - i.e. can only be a
  # result of one action.
  ?nGeneratingAction
    a case-investigation:InvestigativeAction ;
    uco-core:hasFacet/uco-action:result ?nGenerationProvenanceRecord ;
    uco-core:hasFacet/uco-action:result ?nResult ;
    .

  # ?nResult might be processed by multiple actions, but cannot be
  # generated by multiple actions.  The designation for having been
  # processed multiple times is to be a member of multiple provenance
  # records.
  #
  # To allow for the case where ?nGeneratingAction is also
  # ?nMostRecentAction, do not require ?nResult be an input to
  # ?nMostRecentAction.
  #
  # The nested SELECT DISTINCT clause removes repetitions from multiple
  # nResult nodes passed between activities.  The nResult nodes are not
  # included in the constructed results, so there's no sense making the
  # results consumer loop through the same action pair once per distinct
  # passed result.  This sub-query reduces the inspection to all pairs
  # of actions linked by passing some provenance record.
  {
    SELECT DISTINCT ?nMostRecentAction ?nUsingAction ?nMostRecentProvenanceRecord
    WHERE {
      ?nMostRecentAction
        a case-investigation:InvestigativeAction ;
        uco-core:hasFacet/uco-action:result ?nMostRecentProvenanceRecord ;
        .

      ?nUsingAction
        a case-investigation:InvestigativeAction ;
        uco-core:hasFacet/uco-action:object ?nMostRecentProvenanceRecord ;
        .

      ?nMostRecentProvenanceRecord
        a case-investigation:ProvenanceRecord ;
        .
    }
  }

  ?nUsingAction
    uco-core:hasFacet/uco-action:object ?nResult ;
    .

  ?nGenerationProvenanceRecord
    a case-investigation:ProvenanceRecord ;
    uco-core:object ?nResult ;
    .

  # It is possible that ?nMostRecentProvenanceRecord may also be
  # ?nGenerationProvenanceRecord.
  ?nMostRecentProvenanceRecord
    uco-core:object ?nResult ;
    .
}
